{"version":3,"sources":["input-Compo/input-Compo.js","button-Compo/button-Compo.js","Pnr-Compo/Pnr-Compo.js","Select-Compo/Select-Compo.js","SeatFare-Compo/SeatFare-Compo.js","Nav-Compo/Nav-Compo.js","Header-Compo/Header-Compo.js","Modal-Compo/Modal-Compo.js","App.js","serviceWorker.js","index.js","images/loading.svg"],"names":["input","props","label","react_default","a","createElement","className","labelClass","inputClass","onChange","onchange","name","type","Button","content","this","isLoading","Fragment","src","loadingImage","alt","align","onClick","onclick","class","Component","PNR","input_Compo_input_Compo","button_Compo_button_Compo","pnrValidator","Select","state","handleChange","_ref","option","_this","setState","selectedOption","onPowerChange","optionArray","options","forEach","push","value","style","width","display","height","paddingTop","lib","placeholder","selected","SeatFare","seatFareObjo","trainNo","sourceCode","destCode","date","pref","quotaCode","age","userObjo","handlePowerChange","dummySeatObjo","Object","assign","target","moment","format","toggleLoading","bool","_this2","renderContent","entries","_ref2","_ref3","slicedToArray","key","undefined","usage","Select_Compo_Select","seatFareAvailability","buttonContent","Nav","buttons","map","button","header","VerticallyCenteredModal","Modal","size","aria-labelledby","centered","Header","closeButton","Title","id","modalHeader","Body","modalContentHeader","modalContent","Footer","es_Button","onHide","App","canShowComponent","dummyRenderObjo","toConsumableArray","renderObjo","canShow","modalClose","showModal","callRailwayAPI","url","fetch","then","res","json","catch","err","console","log","_callee","response","regenerator_default","wrap","_context","prev","next","sent","stop","seatFareChecker","_callee2","modalObjo","_context2","concat","showModalContent","Modal_Compo_Modal_Compo","fare","availability","status","show","buttonsObjo","animateComponents","contentObjo","pnrStatus","Pnr_Compo","seatAvailability","SeatFare_Compo_SeatFare_Compo","seatFare","animate","anime","targets","translateY","translateX","duration","opacity","direction","easing","reduce","contentsArray","Nav_Compo_Nav_Compo","Header_Compo_Header_Compo","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.b46c1228.chunk.js","sourcesContent":["import React from 'react';\nimport './input-Compo.css';\nconst input = (props) => {\n    return (props.label)\n    ? (\n        <div className=\"pa2 w-100 fl\">\n            <label className={props.labelClass}>{props.label}</label>\n            <input className={props.inputClass} onChange={props.onchange} name={props.name} type={props.type} />\n        </div>\n    )\n    : (\n        <div className=\"pa2 w-100 fl\">\n            <input className={props.inputClass} onChange={props.onchange} name={props.name} type={props.type} />\n        </div>\n    );\n}\n\nexport default input;","import React, { Component } from 'react';\nimport loadingImage from '../images/loading.svg';\nimport './button-Compo.css';\n\nclass Button extends Component {\n    \n  render() {\n    if (this.props.isLoading) {\n      var content;\n      content = (\n        <>\n          <img className=\"svg-load spin\" src={loadingImage} alt=\"Loading\" />&nbsp;&nbsp;<span>Loading</span>\n        </>\n      )\n    } else {\n      content = this.props.content;\n    }\n      return (\n        <div className={this.props.align}>\n          <button name={this.props.name} onClick={this.props.onclick} className={this.props.class}>\n              {content}\n          </button>\n        </div>\n      );\n  }\n}\n\nexport default Button;","import React from 'react'\nimport Input from '../input-Compo/input-Compo';\nimport Button from '../button-Compo/button-Compo';\n\nconst PNR = (props) => {\n    return (\n        <div className=\"tc\">\n            <Input \n                inputClass=\"input-field input-shadow\"\n                labelClass=\"mr2 dark-blue tr dib w-30 label-anime\" \n                label=\"Enter PNR Number\"\n                type=\"text\"\n            />\n            <Button \n                onclick={props.pnrValidator} \n                class=\"f5 link ph3 pv2 mt2 mb2 dib white bg-dark-blue br2\" \n                content=\"Check Status\"\n            />\n        </div>\n    );\n};\n\nexport default PNR;","import React, { Component } from 'react';\nimport { PowerSelect } from 'react-power-select';\nimport 'react-power-select/dist/react-power-select.css';\n\nexport default class Select extends Component {\n\n    state = {};\n\n    handleChange = ({ option }) => {\n        this.setState({\n            selectedOption: option\n        });\n        this.props.onPowerChange(option, this.props.name);\n    }\n\n    render() {\n        let style = {\n            width: '40%',\n            display: 'inline-block',\n            height: '32px',\n            paddingTop: '8px'\n        }\n        let optionArray = [];\n        this.props.options.forEach(option => {\n            return optionArray.push(<option value={option}>{option}</option>);\n        })\n        return (\n            <div className=\"pa2 w-100 fl\">\n                <label className={this.props.labelClass}>{this.props.label}</label>\n                <div style={style}>\n                    <PowerSelect\n                        placeholder=\"Choose an option\"\n                        options={this.props.options}\n                        selected={this.state.selectedOption}\n                        onChange={this.handleChange}\n                    />\n                </div>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport Input from '../input-Compo/input-Compo';\nimport Button from '../button-Compo/button-Compo';\nimport Select from '../Select-Compo/Select-Compo';\nimport moment from 'moment';\nimport './SeatFare-Compo.css';\n\nclass SeatFare extends Component {\n        seatFareObjo= {\n            'trainNo': {\n                'label': \"Enter Train No\",\n                'name': \"trainNo\",\n                'type': 'text'            \n            },\n            'sourceCode': {\n                'label': \"Enter Source\",\n                'name': \"sourceCode\",\n                'type': 'text'            \n            },\n            'destCode': {\n                'label': \"Enter Destination\",\n                'name': 'destCode',\n                'type': 'text'                        \n            },\n            'date': {\n                'label': \"Enter Date\",\n                'name': 'date',\n                'type': 'date'\n            },\n            'pref': {\n                'label': \"Enter Preference\",\n                'name': 'pref',\n                'options': ['1A', '2A', '3A', 'SL', 'FC', 'CC', '2S'],\n                'type': 'select'               \n            },\n            'quotaCode': {\n                'label': \"Enter Quota\",\n                'name': 'quotaCode',\n                'options': ['GN', 'LD', 'HO', 'DQ', 'tq'],\n                'type': 'select'                \n            },\n            'age': {\n                'label': \"Enter Age\",\n                'name': \"age\",\n                'type': 'text'                \n            },\n        }\n\n    state = {\n        userObjo: {\n            trainNo:null,\n            sourceCode:null,\n            destCode:null,\n            date:null,\n            pref:null,\n            quotaCode:null,\n            age:null\n        },\n        isLoading: false\n    }\n\n    handlePowerChange = (option, name) => {\n        let dummySeatObjo = {}\n        Object.assign(dummySeatObjo, this.state.userObjo);\n        dummySeatObjo[name] = option;\n        this.setState({\n            userObjo: dummySeatObjo\n        });\n    }\n\n    handleChange = ({ target }) => {\n        let dummySeatObjo = {}\n        Object.assign(dummySeatObjo,this.state.userObjo);\n        if(target.type === 'date') {\n            let date = moment(target.value,'YYYY-MM-DD').format('DD-MM-YYYY');\n            dummySeatObjo[target.name] = date;\n        } else {\n            dummySeatObjo[target.name] = target.value;\n        }\n        this.setState({\n            userObjo: dummySeatObjo\n        });\n    }\n\n    toggleLoading = (bool) => {\n        let isLoading = bool;\n        this.setState({\n            isLoading\n        });\n    }\n\n    render() {\n        let renderContent = [];\n        let inputClass;\n        Object.entries(this.seatFareObjo).forEach(([key, value]) => {\n            if ((value !== undefined) && !(this.props.usage === \"SeatAvailability\" && key === 'age')) {\n                (key === 'date') \n                    ? inputClass = \"input-field date-input-field input-shadow w-50 dib\"\n                    : inputClass = \"input-field input-shadow w-50 dib\";\n                (value['type'] === 'select')\n                    ? renderContent.push(\n                        <Select\n                            labelClass=\"ma2 dark-blue tr dib label-width label-anime\"\n                            label={value['label']}\n                            options={value['options']}\n                            onchange={this.handleChange}\n                            onPowerChange={this.handlePowerChange}\n                            name={value['name']}\n                        />\n                    )\n                    : renderContent.push(\n                        <Input\n                            inputClass= {inputClass}\n                            labelClass=\"ma2 dark-blue tr dib label-width label-anime\"\n                            label={value['label']}\n                            type={value['type']}\n                            onchange={this.handleChange}\n                            name={value['name']}\n                        />\n                    );\n            }\n        })\n        return(\n            <div className=\"dib\">\n                {renderContent}\n                <Button\n                    onclick={() => this.props.seatFareAvailability(this.state.userObjo, this.props.usage, this.toggleLoading)}\n                    align=\"tc pa2\"\n                    class=\"f5 link ph3 pv2 mb2 mt2 dib white bg-dark-blue br2\"\n                    content={this.props.buttonContent}\n                    isLoading={this.state.isLoading}\n                />\n            </div>\n        );\n    }\n}\n\nexport default SeatFare;","import React from 'react';\nimport Button from '../button-Compo/button-Compo';\nimport './Nav-Compo.css';\n\nconst Nav = (props) => {\n  let renderContent = props.buttons.map(button => {\n    return(\n        <Button\n          align='pa2 dib'\n          name={button.name}\n          class={button.class}\n          content={button.content}\n          onclick={props.onclick}\n        />\n    );\n  })\n  return(\n    <div className=\"nav-compo tc\">\n      {renderContent}\n    </div>\n  );\n}\nexport default Nav;","import React from 'react';\nimport './Header-Compo.css';\n\nconst header = (props) => {\n  return (\n    <div className={props.align}> \n      <h1 className={props.class}>{props.content}</h1>\n    </div>\n  );\n}\n\nexport default header;","import React, { Component } from 'react';\nimport { Button, Modal } from 'react-bootstrap'; \nimport './Modal-Compo.css';\n\nclass VerticallyCenteredModal extends Component {\n\n  render() {\n    return (\n      <Modal\n        {...this.props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            {this.props.modalHeader}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h4>{this.props.modalContentHeader}</h4>\n          <p>\n            {this.props.modalContent}\n          </p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={this.props.onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default VerticallyCenteredModal;","import React, { Component } from 'react';\nimport './App.css';\nimport PNR from \"./Pnr-Compo/Pnr-Compo\";\nimport SeatFare from \"./SeatFare-Compo/SeatFare-Compo\";\nimport Nav from \"./Nav-Compo/Nav-Compo\";\nimport Header from \"./Header-Compo/Header-Compo\";\nimport anime from 'animejs/anime.js';\nimport VerticallyCenteredModal from './Modal-Compo/Modal-Compo';\n\nclass App extends Component {\n\n  canShowComponent = ({target}) => {\n    let dummyRenderObjo = {};\n    dummyRenderObjo = [...this.state.renderContent];\n    dummyRenderObjo.forEach(renderObjo => {\n      if(renderObjo.name === target.name) {\n        renderObjo.canShow = true;\n      } else {\n        renderObjo.canShow = false;\n      }\n    });\n    this.setState({\n      renderContent: dummyRenderObjo\n    });\n  }\n\n  modalClose = () => this.setState({ showModal: false });\n\n  callRailwayAPI = (url) => {\n    return fetch(url).then(res => res.json()).then(res => res).catch(err => console.log(err));\n  }\n\n  pnrValidator = async () => {\n    let url = `https://api.railwayapi.com/v2/pnr-status/pnr/4707981579/apikey/mk8unxtdpr/`;\n    var response = await this.callRailwayAPI(url);  \n    console.log(response);\n  }\n\n  seatFareChecker = async (userObjo, usage, toggleLoading) => {\n    toggleLoading(true);\n    let url, modalObjo;\n    if (usage === 'FareChecker') {\n      modalObjo = {\n        modalHeader: 'Fare Checker',\n        modalContentHeader: \"For Preferred Quota:\",\n      }\n     url = `https://api.railwayapi.com/v2/fare/train/${userObjo['trainNo']}/source/${userObjo['sourceCode']}/dest/${userObjo['destCode']}/age/${userObjo['age']}/pref/${userObjo['pref']}/quota/${userObjo['quotaCode']}/date/${userObjo['date']}/apikey/mk8unxtdpr/`;\n    } else {\n        modalObjo = {\n        modalHeader: 'Seat Availability',\n        modalContentHeader: \"Available Seats:\",\n      }\n      url = `https://api.railwayapi.com/v2/check-seat/train/${userObjo['trainNo']}/source/${userObjo['sourceCode']}/dest/${userObjo['destCode']}/date/${userObjo['date']}/pref/${userObjo['pref']}/quota/${userObjo['quotaCode']}/apikey/mk8unxtdpr/`;\n    }\n    var response = await this.callRailwayAPI(url);\n    this.setState({\n        showModal: true,\n        showModalContent: <VerticallyCenteredModal\n                            modalHeader={modalObjo.modalHeader}\n                            modalContentHeader={modalObjo.modalContentHeader}\n                            modalContent={response.fare || response.availability[0].status}\n                            show='true'\n                            onHide={this.modalClose}\n                          />\n    });\n    toggleLoading(false);\n  }\n\n  buttonsObjo = [\n    {\n      name: 'pnrStatus',\n      content: 'Check PNR',\n      class: 'f6 link ba ph3 pv2 dib white bg-transparent button-shadow'\n    },\n    {\n      name: 'seatAvailability',\n      content: 'Check Availability',\n      class: 'f6 link ba ph3 pv2 dib white bg-transparent button-shadow'\n    },\n    {\n      name: 'seatFare',\n      content: 'Check Fare',\n      class: 'f6 link ba ph3 pv2 dib white bg-transparent button-shadow'\n    }\n  ]\n\n  state = {\n    renderContent: [\n      {\n        name: 'pnrStatus',\n        canShow: false \n      },\n      {\n        name: 'seatAvailability',\n        canShow: false\n      },\n      {\n        name: 'seatFare',\n        canShow: false\n      }\n    ],\n    showModal: false,\n    showModalContent: <VerticallyCenteredModal \n                        modalHeader =''\n                        modalContentHeader=''\n                        modalContent = ''\n                        show ='true' \n                        onHide = {this.modalClose} \n                      />,\n    animateComponents: true         \n  }\n\n  contentObjo = {\n    pnrStatus:  <PNR \n                  isLoading={this.state.isLoading} \n                  pnrValidator={this.pnrValidator} \n                />,\n    seatAvailability: <SeatFare \n                        isLoading={this.state.isLoading} \n                        usage=\"SeatAvailability\" \n                        seatFareAvailability={this.seatFareChecker} \n                        buttonContent=\"Check Availability\"\n                      />,\n    seatFare: <SeatFare \n                isLoading={this.state.isLoading} \n                usage=\"FareChecker\" \n                seatFareAvailability={this.seatFareChecker} \n                buttonContent=\"Check Fare\"\n              />\n  }\n\n  animate = (props) => {\n    anime({\n      targets: props.targets,\n      translateY: props.translateY,\n      translateX: props.translateX,\n      duration: props.duration,\n      opacity: [1, 0],\n      direction: 'reverse',\n      easing: 'easeInOutSine',\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.state.animateComponents) {\n      this.animate(\n        {\n          targets: '.container',\n          translateX: 0,\n          translateY: 300,\n          duration: 500\n        }\n      );\n      this.animate(\n        {\n          targets: '.input-field',\n          translateX: 50,\n          translateY: 0,\n          duration: 700\n        }\n      );\n      this.animate(\n        {\n          targets: '.label-anime',\n          translateX: -50,\n          translateY: 0,\n          duration: 700\n        }\n      );\n      this.setState({\n        animateComponents: false\n      });\n    }\n  }\n\n  render() {\n    let showModal;\n    let renderContent = this.state.renderContent.reduce((contentsArray, Component) => {\n      if(Component['canShow']) {\n        contentsArray.push(this.contentObjo[Component['name']])\n      }\n      return contentsArray;\n    },[]);\n      \n    (this.state.showModal) \n      ? (showModal = this.state.showModalContent)\n      : (showModal = null);\n  \n    return (\n      <div className=\"App\">\n        <Nav onclick={this.canShowComponent} buttons={this.buttonsObjo}/>\n        <Header\n          align=\"tc\"\n          class=\"f2 ma4 dark-blue lobster-font\"\n          content=\"The IRCTC Simulator\"\n        />\n        <div className=\"container\"> \n          {renderContent}\n        </div>\n        {showModal}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'react-power-select/dist/react-power-select.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/loading.cc56a401.svg\";"],"sourceRoot":""}